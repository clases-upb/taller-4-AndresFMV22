/*
 * This source file was generated by the Gradle 'init' task
 */
package taller4;



public class App {
    

    public static void main(String[] args) {
        
         try {
            System.out.println(grupos_impar(100)); 
            System.out.println(Fiabonacci(10));
    
            System.out.println(generar_numeros_aleatorios(1,10));
            System.out.println(sumar_numeros_aleatorios(100));
            System.out.println(simular_sorteo());


        } catch (Exception e) {
           return -1;
        }

    }

    /* TODAS LAS FUNCIONES DEBEN LLEVAR CONTROL DE ERRORES, SI EL ENUNCIADO NO LO ESPECIFICA, LO DEBES PONER
     * DE ACUERDO CON TU CRITERIO
     */

    /* 
     * 1.	Escriba una función que reciba un entero positivo entre 100 y 500 y retorne en un texto todos los números impares desde 1 
     * hasta ese número separados por comas en grupos de hasta 8 números.
     * 
    */
     public static String grupos_impar(int numero) {

        String resultado = "";
        int contador_impares = 0; 
    
        try {
            if (numero < 100 || numero > 500) {
                return "El número debe estar entre 100 y 500";
            }
    
            for (int impar = 1; impar <= numero; impar++) {
                if (impar % 2 != 0) {
                    resultado = resultado + impar + ", " + "\t"; contador_impares ++;
                    if (contador_impares % 8 == 0 ) {
                        resultado = resultado + "\n";
                    }
                }
            }
           
        } catch (Exception e) {
            return "Ocurrio un error inesperado"; 
        }
        
        return resultado;
    }

   

    /* 2. 	Escriba una función que reciba un entero N mayor de 2  y retorne un string cono esos N términos de la 
    serie de Fibonacci (La sucesión de Fibonacci se trata de una serie infinita de números naturales que empieza con un 0 y un 1 
    y continúa añadiendo números que son la suma de los dos anteriores: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 
    987, 1597…)
     * 
     * 
    */
     public static String Fiabonacci (int N){
        try {
            int entero1 = 2;
            int entero2 = 2; 
            String resultado = entero1 + ", " + entero2;
           

            if (N <= 2){
                return "El numero N debe ser mayor a 2";
            }
            for (int numero = 2; numero <= N; numero ++){
               int numero_siguiente = entero1 + entero2;
               resultado = resultado + " , " + numero_siguiente;
               entero1 = entero2;
               entero2 = numero_siguiente;
            }
            return resultado; 
            
        } catch (Exception e) {
            return "Ocurrio un error inesperado";
        }
    }

    /* 
     * 3.	Diseñar y desarrollar una función que NO reciba datos de entrada, genere aleatoriamente un número entre 2 y 355, 
       le calcule su raíz cuadrada y retorne este valor. Para calcular las raíces usar la función Sqrt de la biblioteca Math.

       En el main, antes de invocar la función, se debe calcular un aleatorio entre 20 y 30 el cual establecerá la cantidad 
       de veces que va a llamar a la función y en un ciclo, mostrar los resultados.

    */
    public static double calcular_raiz_cuadrada() {
        
        try {
        int cantidad_llamadas = (int) (Math.random() * (30 - 20 + 1)) + 20;
        for (int num = 0; num < cantidad_llamadas; num++) {
            double resultado = calcular_raiz_cuadrada();
            System.out.println("Raíz cuadrada del número aleatorio: " + resultado);
        }
            int numero_aleatorio = (int) (Math.random() * (355 - 2 + 1)) + 2;
            double raiz = Math.sqrt(numero_aleatorio);
            return raiz;

        } catch (Exception e) {
            System.out.println("Ocurrió un error: ");
            return 0.0; 
        }
}

//No supe como hacerlo bien, igualmente pongo la funcion para una retroalimentacion, gracias =)


    /*4.	Diseñar y desarrollar una función que reciba un valor inicial y un valor final, para generar 900 números aleatorios 
        en este rango y retorne un texto que diga cuántos números pares fueron generados. Controle que el nro inicial sea menor que 
        nro final para establecer el rango.

        Llame la función desde el main e imprimir el resultado arrojado.
    */
     public static String generar_numeros_aleatorios(int valor_inicial, int valor_final) {

          try {

            if (valor_inicial >= valor_final) {
                return "El valor inicial debe ser menor que el valor final";
            }
    
            int contador_pares = 0;
    
            for (int num = 0; num < 900; num++) {
                int numero_aleatorio = (int) (Math.random() * (valor_final - valor_inicial + 1)) + valor_inicial;
                if (numero_aleatorio % 2 == 0) {
                    contador_pares ++;
                }
            }
    
            return "Se generaron " + contador_pares + " números pares";
        
            
          } catch (Exception e) {
           return "Ocurrio un error inesperado";
          }

        }
    
            
    




    /* 5.	Diseñar y desarrollar una función que calcule una cantidad de números aleatorios que viene como parámetro de entrada 
        y los sume.  La función deberá retornar el total de la suma. Usted defina los rangos que va a usar en el cálculo.

        Llame la función desde el main e imprimir el resultado arrojado.

      
    */
    public static double sumar_numeros_aleatorios(int cantidad_numeros) {

            try {

                int minimo = 1;
                int maximo = 100;
                double suma = 0.0;
        
                for (int num = 0; num < cantidad_numeros; num++) {
                    int numero_aleatorio = (int) (Math.random() * (maximo - minimo + 1)) + minimo;
                    suma = suma + numero_aleatorio;
                }
        
                return suma;
                
            } catch (Exception e) {
                return -1;
            }
        }


    /* 6.	Se requiere una función para simular el sorteo de una lotería, de acuerdo con las siguientes condiciones:

            La lotería tiene 20 premios. 

            Cada premio que calcula el programa debe tener el número de 4 cifras entre 0000 y 9999 acompañado de la serie 
            que es un número entre 100 y 150.

            Ejemplo: 5698-101

            Cada premio lo debe imprimir el programa de la siguiente forma (n representa un número cualquiera):

            Sorteo # nn - Número Premiado nnnn - Serie nnn

            Ejm: Sorteo # 19  - Número Premiado 5698 - Serie 101

            Para tener en cuenta la forma en la cual se informan los 20 resultados: 

            Del premio 20 al 6 el programa imprime: 

            ======PREMIOS MENORES=======
            y la lista de los 15 premios 

            Del premio 5 al 2 el programa imprime:
            ======PREMIOS SECOS=========
            y la lista de los 4 premios secos

            AL llegar al premio 1, el programa imprime:
            ======Premio mayor==========
            Y el premio mayor

            Nota: para sacar el premio mayor calcule el random por cada número, como lo hacen en la realidad los sorteos.

            La función no recibe parámetros y devuelve un string con toda la lista de premios. El main, invoca la función 
            e imprime el resultado que esta arroje. 


     * 
     * 
    */
     public static String simular_sorteo() {
        String resultado = "======Premios Menores=======\n";
    
        for (int num = 20; num > 5; num--) {
            resultado = resultado + "Sorteo # " + num + " - Número Premiado " + (int) (Math.random() * 10000) + " - Serie "
             + ((int) (Math.random() * 51) + 100) + "\n";
        }
    
        resultado = resultado + "\n======Premios Secos=========\n";
        for (int num1 = 5; num1 > 1; num1--) {
            resultado = resultado + "Sorteo # " + num1 + " - Número Premiado " + (int) (Math.random() * 10000) + " - Serie " 
            + ((int) (Math.random() * 51) + 100) + "\n";
        }
    
        resultado = resultado + "\n======Premio Mayor==========\n";
        resultado = resultado + "Sorteo # 1 - Número Premiado " + (int) (Math.random() * 10000) + " - Serie " +
         ((int) (Math.random() * 51) + 100) + "\n";
    
        return resultado;
    }

}
